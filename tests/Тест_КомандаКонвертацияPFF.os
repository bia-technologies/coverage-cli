#Использовать fs
#Использовать asserts
#Использовать "utils"

// BSLLS:LatinAndCyrillicSymbolInWord-off
// BSLLS:NestedFunctionInParameters-off
// BSLLS:MissingVariablesDescription-off

#Область ОписаниеПеременных

Перем Тестер;
Перем КаталогСборки;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ТестДолжен_КонвертироватьXML_PFF() Экспорт
	
	КаталогИсходников = ПомощникТестирования.КаталогИсходниковКонфигурацииXML();
	ФорматИсходников = "XML";
	КонвертироватьЗамерыПокрытия(КаталогИсходников, ФорматИсходников);
	
КонецПроцедуры

Процедура ТестДолжен_КонвертироватьEDT_PFF() Экспорт

	КаталогИсходников = ПомощникТестирования.КаталогИсходниковКонфигурацииEDT();
	ФорматИсходников = "EDT";
	КонвертироватьЗамерыПокрытия(КаталогИсходников, ФорматИсходников);

КонецПроцедуры

Процедура ТестДолжен_КонвертироватьКонфигурациюXML_PFF() Экспорт
	
	ИмяФайлаНастроекКонвертации = ОбъединитьПути(ПомощникТестирования.КаталогНастроек(), "configurationXML.json");
	КонвертироватьЗамерКонфигурации(ИмяФайлаНастроекКонвертации);
	
КонецПроцедуры

Процедура ТестДолжен_КонвертироватьКонфигурациюEDT_PFF() Экспорт
	
	ИмяФайлаНастроекКонвертации = ОбъединитьПути(ПомощникТестирования.КаталогНастроек(), "configurationEDT.json");
	КонвертироватьЗамерКонфигурации(ИмяФайлаНастроекКонвертации);
	
КонецПроцедуры

Процедура ТестДолжен_КонвертироватьРасширениеXML_PFF() Экспорт

	ИмяФайлаНастроекКонвертации = ОбъединитьПути(ПомощникТестирования.КаталогНастроек(), "extensionXML.json");
	КонвертироватьЗамерРасширения(ИмяФайлаНастроекКонвертации);
	
КонецПроцедуры

Процедура ТестДолжен_КонвертироватьРасширениеEDT_PFF() Экспорт
	
	ИмяФайлаНастроекКонвертации = ОбъединитьПути(ПомощникТестирования.КаталогНастроек(), "extensionEDT.json");
	КонвертироватьЗамерРасширения(ИмяФайлаНастроекКонвертации);
	
КонецПроцедуры

Процедура ТестДолжен_КонвертироватьВнешнийМодульXML_PFF() Экспорт
	
	ИмяФайлаНастроекКонвертации = ОбъединитьПути(ПомощникТестирования.КаталогНастроек(), "externalXML.json");
	КонвертироватьЗамерВнешнегоМодуля(ИмяФайлаНастроекКонвертации);
	
КонецПроцедуры

Процедура ТестДолжен_КонвертироватьВнешнийМодульEDT_PFF() Экспорт
	
	ИмяФайлаНастроекКонвертации = ОбъединитьПути(ПомощникТестирования.КаталогНастроек(), "externalEDT.json");
	КонвертироватьЗамерВнешнегоМодуля(ИмяФайлаНастроекКонвертации);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗапускомТеста() Экспорт
	
	КаталогСборки = Тестер.ИмяВременногоФайла();
	ФС.ОбеспечитьПустойКаталог(КаталогСборки);
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Тестер.УдалитьВременныеФайлы();
	
КонецПроцедуры

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	Тестер = Тестирование;

	Тестер.ДобавитьТест("ТестДолжен_КонвертироватьXML_PFF");
	Тестер.ДобавитьТест("ТестДолжен_КонвертироватьEDT_PFF");
	Тестер.ДобавитьТест("ТестДолжен_КонвертироватьКонфигурациюXML_PFF");
	Тестер.ДобавитьТест("ТестДолжен_КонвертироватьКонфигурациюEDT_PFF");
	Тестер.ДобавитьТест("ТестДолжен_КонвертироватьРасширениеXML_PFF");
	Тестер.ДобавитьТест("ТестДолжен_КонвертироватьРасширениеEDT_PFF");
	Тестер.ДобавитьТест("ТестДолжен_КонвертироватьВнешнийМодульXML_PFF");
	Тестер.ДобавитьТест("ТестДолжен_КонвертироватьВнешнийМодульEDT_PFF");

	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ФайлПокрытияPFF()
	Возврат ОбъединитьПути(ПомощникТестирования.КаталогЗамеров(), "coverage.pff");
КонецФункции

Процедура КонвертироватьЗамерыПокрытия(КаталогИсходников, ФорматИсходников)

	ИмяФайлаРезультатов = ОбъединитьПути(КаталогСборки, "coverageXML.xml");
	
	Аргументы = Новый Массив;
	ПомощникТестирования.ДобавитьАргументInput(Аргументы, ФайлПокрытияPFF());
	ПомощникТестирования.ДобавитьАргументOutput(Аргументы, ИмяФайлаРезультатов);
	ПомощникТестирования.ДобавитьАргументWorkspace(Аргументы, ПомощникТестирования.КаталогТестовыхДанных());
	ПомощникТестирования.ДобавитьАргументSources(Аргументы, КаталогИсходников);
	ПомощникТестирования.ДобавитьАргументFormat(Аргументы, ФорматИсходников);
	
	ПомощникТестирования.ВыполнитьКомандуКонвертировать(Аргументы);
	
	Утверждения.ПроверитьИстину(
		ФС.ФайлСуществует(ИмяФайлаРезультатов),
		"Файл с результатами должен существовать");
	
	ЧислоСтрок = ПомощникТестирования.ЧислоСтрокРезультата(ИмяФайлаРезультатов);
	
	Утверждения.ПроверитьРавенство(ЧислоСтрок, 274,
		"Проверка количества строк в результате");

КонецПроцедуры

Процедура КонвертироватьЗамерКонфигурации(ИмяФайлаНастроекКонвертации)

	ИмяФайлаРезультатов = ОбъединитьПути(КаталогСборки, "coverageEDT.xml");
	
	Аргументы = Новый Массив;
	ПомощникТестирования.ДобавитьАргументInput(Аргументы, ФайлПокрытияPFF());
	ПомощникТестирования.ДобавитьАргументOutput(Аргументы, ИмяФайлаРезультатов);
	ПомощникТестирования.ДобавитьАргументWorkspace(Аргументы, ПомощникТестирования.КаталогТестовыхДанных());
	ПомощникТестирования.ДобавитьАргументСonfig(Аргументы, ИмяФайлаНастроекКонвертации);
	
	ПомощникТестирования.ВыполнитьКомандуКонвертировать(Аргументы);
	
	Утверждения.ПроверитьИстину(
		ФС.ФайлСуществует(ИмяФайлаРезультатов),
		"Файл с результатами должен существовать");
	
	ЧислоСтрок = ПомощникТестирования.ЧислоСтрокРезультата(ИмяФайлаРезультатов);
	
	Утверждения.ПроверитьРавенство(ЧислоСтрок, 274,
		"Проверка количества строк в результате");

КонецПроцедуры

Процедура КонвертироватьЗамерРасширения(ИмяФайлаНастроекКонвертации)

	ИмяФайлаРезультатов = ОбъединитьПути(КаталогСборки, "coverageEDT.xml");
	
	Аргументы = Новый Массив;
	ПомощникТестирования.ДобавитьАргументInput(Аргументы, ФайлПокрытияPFF());
	ПомощникТестирования.ДобавитьАргументOutput(Аргументы, ИмяФайлаРезультатов);
	ПомощникТестирования.ДобавитьАргументWorkspace(Аргументы, ПомощникТестирования.КаталогТестовыхДанных());
	ПомощникТестирования.ДобавитьАргументСonfig(Аргументы, ИмяФайлаНастроекКонвертации);
	
	ПомощникТестирования.ВыполнитьКомандуКонвертировать(Аргументы);
	
	Утверждения.ПроверитьИстину(
		ФС.ФайлСуществует(ИмяФайлаРезультатов),
		"Файл с результатами должен существовать");
	
	ЧислоСтрок = ПомощникТестирования.ЧислоСтрокРезультата(ИмяФайлаРезультатов);
	
	Утверждения.ПроверитьРавенство(ЧислоСтрок, 11,
		"Проверка количества строк в результате");

КонецПроцедуры

Процедура КонвертироватьЗамерВнешнегоМодуля(ИмяФайлаНастроекКонвертации)

	ИмяФайлаРезультатов = ОбъединитьПути(КаталогСборки, "coverageEDT.xml");
	
	Аргументы = Новый Массив;
	ПомощникТестирования.ДобавитьАргументInput(Аргументы, ФайлПокрытияPFF());
	ПомощникТестирования.ДобавитьАргументOutput(Аргументы, ИмяФайлаРезультатов);
	ПомощникТестирования.ДобавитьАргументWorkspace(Аргументы, ПомощникТестирования.КаталогТестовыхДанных());
	ПомощникТестирования.ДобавитьАргументСonfig(Аргументы, ИмяФайлаНастроекКонвертации);
	
	ПомощникТестирования.ВыполнитьКомандуКонвертировать(Аргументы);
	
	Утверждения.ПроверитьИстину(
		ФС.ФайлСуществует(ИмяФайлаРезультатов),
		"Файл с результатами должен существовать");
	
	ЧислоСтрок = ПомощникТестирования.ЧислоСтрокРезультата(ИмяФайлаРезультатов);
	
	Утверждения.ПроверитьРавенство(ЧислоСтрок, 12,
		"Проверка количества строк в результате");

КонецПроцедуры

#КонецОбласти