#Использовать fs
#Использовать asserts
#Использовать "utils"
#Использовать "../pkg/genericCoverage"

// BSLLS:LatinAndCyrillicSymbolInWord-off
// BSLLS:NestedFunctionInParameters-off
// BSLLS:MissingVariablesDescription-off

#Область ОписаниеПеременных

Перем Тестер;
Перем КаталогСборки;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ТестДолжен_ПолучитьСтрокиПокрытияКонфигурацииXML() Экспорт
	
	КаталогИсходниковКонфигурации = ПомощникТестирования.КаталогИсходниковКонфигурацииXML();
	ПолучитьСтрокиПокрытияКонфигурации(КаталогИсходниковКонфигурации);
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьСтрокиПокрытияКонфигурацииEDT() Экспорт
	
	КаталогИсходниковКонфигурации = ПомощникТестирования.КаталогИсходниковКонфигурацииEDT();
	ПолучитьСтрокиПокрытияКонфигурации(КаталогИсходниковКонфигурации);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	Тестер = Тестирование;
	Тестер.ДобавитьТест("ТестДолжен_ПолучитьСтрокиПокрытияКонфигурацииXML");
	Тестер.ДобавитьТест("ТестДолжен_ПолучитьСтрокиПокрытияКонфигурацииEDT");
	
	Возврат Неопределено;
	
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
	КаталогСборки = Тестер.ИмяВременногоФайла();
	ФС.ОбеспечитьПустойКаталог(КаталогСборки);
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Тестер.УдалитьВременныеФайлы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьСтрокиПокрытияКонфигурации(КаталогИсходниковКонфигурации)
	
	ИмяФайлаРезультатов = ОбъединитьПути(КаталогСборки, "linesToCover.xml");
	
	Аргументы = Новый Массив;
	ПомощникТестирования.ДобавитьАргументOutput(Аргументы, ИмяФайлаРезультатов);
	ПомощникТестирования.ДобавитьАргументWorkspace(Аргументы, ПомощникТестирования.КаталогТестовыхДанных());
	ПомощникТестирования.ДобавитьАргументSources(Аргументы, КаталогИсходниковКонфигурации);
	
	ПомощникТестирования.ВыполнитьКомандуСтрокиПокрытия(Аргументы);
	
	Утверждения.ПроверитьИстину(
		ФС.ФайлСуществует(ИмяФайлаРезультатов),
		"Файл с результатами должен существовать");
	
	ДанныеПокрытия = Новый ПокрытиеGenericCoverage;
	ДанныеПокрытия.Прочитать(ИмяФайлаРезультатов);
	
	ПрограммныеМодули = ДанныеПокрытия.ПрограммныеМодули();
	
	Утверждения.ПроверитьРавенство(ПрограммныеМодули.Количество(), 79,
		"Проверка количества модулей для покрытия");
	
	ПокрытиеМодуля = ПрограммныеМодули.Получить(0);
	
	Если ПараметрыПриложения.ЭтоWindows() Тогда
		КаталогИсходниковКонфигурацииSQ = СтрЗаменить(КаталогИсходниковКонфигурации, "\", "/");
	Иначе
		КаталогИсходниковКонфигурацииSQ = КаталогИсходниковКонфигурации;
	КонецЕсли;
	
	Утверждения.ПроверитьИстину(
		СтрНачинаетсяС(ПокрытиеМодуля, КаталогИсходниковКонфигурацииSQ),
		"Имя файла исходников должно начинаться с имени каталога");
	
КонецПроцедуры

#КонецОбласти